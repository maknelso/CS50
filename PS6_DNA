import csv
from sys import argv, exit

# example: $ python dna.py databases/large.csv sequences/5.txt

def main():

    # Step 0: Check user input is valid
    if len(argv) != 3:
        print("Incorrect number of command-line arguments.")
        exit(1)

    # Step 1: Opening the files
    # 1 a) Open CSV and read its content into memory - assume first argument is csv
    # open the large or small.csv file
    database = open(argv[1])
    # read the large or small csv file into variable named data
    data = csv.DictReader(database)

    # 1 b) Open DNA sequence and read its content into memory - assume second argument is valid text file
    # open the sequences txt files
    with open(argv[2], "r") as f:
        # read and store it in variable called sequence
        sequence = f.read()

    # Step 2: Computer the STR counts (column titles in data.csv after column "name")
    # declare a dictionary
    counts = {}
    # from 1 on, in csv file
    for subseq_str in data.fieldnames[1:]:
        counts[subseq_str] = longest_match(sequence, subseq_str)

    # This part is confusing:
    # check each row in data (csv file) for a matching profile
    for row in data:
        # counts is a dictionary - 8 elements
        # all the count values are equal to the row values
        if all(counts[subseq_str] == int(row[subseq_str]) for subseq_str in counts):
            print(row["name"])
            database.close()
            return
    print("No match")
    database.close()

# This part is confusing:
def longest_match(sequence, subseq_str):
    longest = 0
    # e.g. length for subseq_str TATC will be 4
    length = len(subseq_str)

    for i in range(len(sequence)):
        count = 0
        while True:
            start = i + length * count # or 0?
            end = start + length
            if sequence[start:end] == subseq_str:
                count += 1
            else:
                break

        # broken out of the loop now
        longest = max(longest, count)
    return longest

main()
